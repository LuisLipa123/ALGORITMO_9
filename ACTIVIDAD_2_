public class ListLinked<T> {
    private Node<T> head;

    public ListLinked() {
        head = null;
    }

    public void insert(T value) {
        Node<T> newNode = new Node<>(value);
        if (head == null) head = newNode;
        else {
            Node<T> aux = head;
            while (aux.next != null) aux = aux.next;
            aux.next = newNode;
        }
    }

    public Node<T> getHead() {
        return head;
    }

    public void setHead(Node<T> head) {
        this.head = head;
    }

    public boolean contains(T value) {
        Node<T> aux = head;
        while (aux != null) {
            if (aux.data.equals(value)) return true;
            aux = aux.next;
        }
        return false;
    }

    public void remove(T value) {
        if (head == null) return;

        // Si el valor est√° en el head
        if (head.data.equals(value)) {
            head = head.next;
            return;
        }

        Node<T> prev = head;
        Node<T> current = head.next;

        while (current != null) {
            if (current.data.equals(value)) {
                prev.next = current.next;
                return;
            }
            prev = current;
            current = current.next;
        }
    }

    public void printList() {
        Node<T> aux = head;
        while (aux != null) {
            System.out.print(aux.data + " ");
            aux = aux.next;
        }
        System.out.println();
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        Node<T> aux = head;
        while (aux != null) {
            sb.append(aux.data).append(" ");
            aux = aux.next;
        }
        return sb.toString().trim();
    }
}
